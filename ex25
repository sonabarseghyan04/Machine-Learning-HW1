import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import r2_score
from sklearn.datasets import make_classification
from sklearn.linear_model import LogisticRegression
from sklearn.datasets import make_moons
from sklearn import datasets
from sklearn.model_selection import train_test_split, StratifiedShuffleSplit, GridSearchCV
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score
from sklearn.datasets import make_circles



print("Downloading MNIST dataset...") #this is done to see if the dataset is being loaded as it was difficult
#to load because of its size, this way we can choose a number of samples
mnist = datasets.fetch_openml('mnist_784', version=1, as_frame=False)
print("MNIST dataset loaded.")


X, y = mnist.data, mnist.target.astype(np.uint8)

n_samples = 1000  # Here we can change the number of samples to see the result

split = StratifiedShuffleSplit(n_splits=1, test_size=0.05, random_state=42)
for train_idx, test_idx in split.split(X[:n_samples], y[:n_samples]):
    X_train, X_test = X[train_idx], X[test_idx]
    y_train, y_test = y[train_idx], y[test_idx]

# Normalizing the data
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Training the SVM with one-versus-all method. So, we have to create a binary classifier for each digit,
#where one category is that certain digit and the other one are all the other digits 
svm_clf = SVC(kernel='rbf', C=90, decision_function_shape='ovr') #when changing the C, nothing changes with the
#accuracy. When putting kernel to rbf, accuracy is 0.98, with kernel being linear it is 0.96, with sigmoid it is 0.9,
#with poly it is 0.94.

svm_clf.fit(X_train_scaled, y_train)

# Predicting on test set
y_pred = svm_clf.predict(X_test_scaled)

# Evaluating the accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Test accuracy: {accuracy:.4f}")
